branches:
  only:
  - master

language: generic

services:
  - docker

cache:
  directories:
  - $HOME/.m2

stages:
  - name: build
  - name: staging
  - name: production
    if: branch = master AND type != pull_request

env:
  global:
    - VERSION_BASE=2.2

jobs:
  include:
    - stage: build
      env:
        - REPO=fabricepipart/teknichrono-backend
        - TESTS_REPO=fabricepipart/teknichrono-backend-tests
      install:
        - curl -s https://codecov.io/bash > codecov.sh
      before_script:
        - export version=$(src/main/travis/get-version.sh)
      script:
        - mvn -B -U clean verify
        - docker build -f src/main/docker/Dockerfile -t $REPO:$version .
        - docker build -f src/main/docker-tests/Dockerfile -t $TESTS_REPO:$version .
      after_script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push $REPO:$version
        - docker push $TESTS_REPO:$version
        - docker logout
      after_success:
        - bash codecov.sh
    - stage: staging
      env:
        - TESTS_REPO=fabricepipart/teknichrono-backend-tests
      install:
        - src/main/travis/install-config.sh
      before_script:
        - export version=$(src/main/travis/get-version.sh)
      script:
        - mvn process-resources
        - kubectl delete all -n teknichrono-staging -l app=teknichrono --wait=true
        - kubectl kustomize target/classes/overlays/staging | kubectl apply -n teknichrono-staging -f -
        - while ! curl -fs https://staging.teknichrono.fr > /dev/null; do echo 'Not started yet ...'; sleep 5; done
        - kubectl run -i -t teknichrono-e2e-tests -n teknichrono-staging --image=$TESTS_REPO:$version --labels="app=teknichrono" --restart=Never -- sh /app/bash/all_tests.sh staging.teknichrono.fr
    - stage: production
      install:
        - src/main/travis/install-config.sh
      before_script:
        - export version=$(src/main/travis/get-version.sh)
      script:
        - mvn process-resources
        - kubectl delete all -n teknichrono-prod -l app=teknichrono --wait=true
        - kubectl kustomize target/classes/overlays/prod | kubectl apply -n teknichrono-prod -f -
        - while ! curl -fs https://www.teknichrono.fr > /dev/null; do echo 'Not started yet ...'; sleep 5; done



  